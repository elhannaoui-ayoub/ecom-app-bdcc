{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/user/Desktop/EVALUATION/ecom-app-bdcc/ecom-app-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { KeycloakAuthGuard } from 'keycloak-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"keycloak-angular\";\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(router, keycloak) {\n    super(router, keycloak);\n    this.router = router;\n    this.keycloak = keycloak;\n  }\n  isAccessAllowed(route, state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Force the user to log in if currently unauthenticated.\n      if (!_this.authenticated) {\n        yield _this.keycloak.login({\n          redirectUri: window.location.origin + state.url\n        });\n      }\n      // Get the roles required from the route.\n      const requiredRoles = route.data['roles'];\n      // Allow the user to proceed if no additional roles are required to access the route.\n      if (!Array.isArray(requiredRoles) || requiredRoles.length === 0) {\n        return true;\n      }\n      // Allow the user to proceed if all the required roles are present.\n      return requiredRoles.every(role => _this.roles.includes(role));\n    })();\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.KeycloakService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["KeycloakAuthGuard","AuthGuard","constructor","router","keycloak","isAccessAllowed","route","state","_this","_asyncToGenerator","authenticated","login","redirectUri","window","location","origin","url","requiredRoles","data","Array","isArray","length","every","role","roles","includes","_","i0","ɵɵinject","i1","Router","i2","KeycloakService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Desktop\\EVALUATION\\ecom-app-bdcc\\ecom-app-angular\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard extends KeycloakAuthGuard {\n  constructor(\n    protected override readonly router: Router,\n    protected readonly keycloak: KeycloakService\n  ) {\n    super(router, keycloak);\n  }\n\n  public async isAccessAllowed(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ) {\n    // Force the user to log in if currently unauthenticated.\n    if (!this.authenticated) {\n      await this.keycloak.login({\n        redirectUri: window.location.origin + state.url\n      });\n    }\n\n    // Get the roles required from the route.\n    const requiredRoles = route.data['roles'];\n\n    // Allow the user to proceed if no additional roles are required to access the route.\n    if (!Array.isArray(requiredRoles) || requiredRoles.length === 0) {\n      return true;\n    }\n\n    // Allow the user to proceed if all the required roles are present.\n    return requiredRoles.every((role) => this.roles.includes(role));\n  }\n}\n"],"mappings":";AAMA,SAASA,iBAAiB,QAAyB,kBAAkB;;;;AAKrE,OAAM,MAAOC,SAAU,SAAQD,iBAAiB;EAC9CE,YAC8BC,MAAc,EACvBC,QAAyB;IAE5C,KAAK,CAACD,MAAM,EAAEC,QAAQ,CAAC;IAHK,KAAAD,MAAM,GAANA,MAAM;IACf,KAAAC,QAAQ,GAARA,QAAQ;EAG7B;EAEaC,eAAeA,CAC1BC,KAA6B,EAC7BC,KAA0B;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAE1B;MACA,IAAI,CAACD,KAAI,CAACE,aAAa,EAAE;QACvB,MAAMF,KAAI,CAACJ,QAAQ,CAACO,KAAK,CAAC;UACxBC,WAAW,EAAEC,MAAM,CAACC,QAAQ,CAACC,MAAM,GAAGR,KAAK,CAACS;SAC7C,CAAC;;MAGJ;MACA,MAAMC,aAAa,GAAGX,KAAK,CAACY,IAAI,CAAC,OAAO,CAAC;MAEzC;MACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,IAAIA,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE;QAC/D,OAAO,IAAI;;MAGb;MACA,OAAOJ,aAAa,CAACK,KAAK,CAAEC,IAAI,IAAKf,KAAI,CAACgB,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,CAAC;IAAC;EAClE;EAAC,QAAAG,CAAA,G;qBA7BUzB,SAAS,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAThC,SAAS;IAAAiC,OAAA,EAATjC,SAAS,CAAAkC,IAAA;IAAAC,UAAA,EAFR;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}